# -*- coding: utf-8 -*-
"""sudoku.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14W6orN9wsG3h5ICcIyDF6qCU25MooT4p
"""

import numpy as np
sudoku_puzzle=[
    [5, 0, 0, 0, 7, 0, 0, 0, 0],
    [6, 0, 0, 1, 9, 5, 0, 0, 0],
    [0, 9, 8, 0, 0, 0, 0, 6, 0],

    [8, 0, 0, 0, 6, 0, 0, 0, 3],
    [4, 0, 0, 8, 0, 3, 0, 0, 1],
    [7, 0, 0, 0, 2, 0, 0, 0, 6],

    [0, 6, 0, 0, 0, 0, 2, 8, 0],
    [0, 0, 0, 4, 1, 9, 0, 0, 5],
    [0, 0, 0, 0, 8, 0, 0, 7, 9]
]
def possibility(row,col,number):
  global sudoku_puzzle
  for i in range(0,9):
    if sudoku_puzzle[row][i]==number:
      return False
  for i in range(0,9):
    if sudoku_puzzle[i][col]==number:
      return False
  x=(col//3)*3
  y=(row//3)*3
  for i in range(0,3):
    for j in range(0,3):
      if sudoku_puzzle[y+i][x+j]==number:
        return False
  return True

def solution():
  global sudoku_puzzle
  for row in range(0,9):
    for col in range(0,9):
      if sudoku_puzzle[row][col]==0:
        for num in range(1,10):
          if possibility(row,col,num):
            sudoku_puzzle[row][col]=num
            solution()
            sudoku_puzzle[row][col]=0
        return
  print(np.matrix(sudoku_puzzle))
  input("More possible solutions")

solution()

